#! /bin/bash

# install the dot files and packages needed
# J. Knerr
# April 2021

export PATH=/bin:/sbin:/usr/bin:/usr/local/bin:/usr/sbin

# just so the lines are all the same
echoline () {
  echo "============================================="
}

# ask y/n question, return true/false
askyn () {
  question=$1
  echo "$question"
  read -r -p "[y/n] " response
  if [[ $response =~ ^([yY][eE][sS]|[yY])$ ]] ; then
    return 0   # true
  else
    return 1   # false
  fi
}

# function to ask: replace [y/n]? 
cprpl () {
  src=$1
  dst=$2
  echo ">>>> $src $dst"
  if [ -e $dst ] ; then
    if askyn "$dst already exists...replace it?";
    then
      d=`date +"%Y%m%d-%H%M%S"`
      # note: dst needs to be full path, not just dir/.
      mv $dst ${dst}-backup.${d}  
      cp $src $dst
    else
      echo "ok...leaving $dst as is..."
    fi
  else
    cp $src $dst
  fi 
}

echo "installing dotfiles and software...."

stuff="curl zsh zsh-syntax-highlighting tmux screen rsync "\
"git vim mutt enscript"

echoline
echo "stuff you probably want installed:"
echo $stuff
echoline
if askyn "run sudo apt-get install?";
then
  sudo apt-get install $stuff
fi
echoline
echo "you also might want i3 ssh-askpass feh redshift..."
if askyn "run sudo apt-get install i3 ssh-askpass feh redshift?";
then
  sudo apt-get install i3 ssh-askpass feh redshift
fi
if [ ! -e ${HOME}/.i3 ] ; then
  mkdir -p ~/.i3
fi
echoline
cprpl i3config ~/.i3/config

# check if ~/.oh-my-zsh already exists...
echoline
if [ ! -e ${HOME}/.oh-my-zsh ] ; then
  sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
fi
if [ ! -e ${HOME}/.oh-my-zsh/custom/plugins/zsh-autosuggestions ] ; then
  git clone https://github.com/zsh-users/zsh-autosuggestions ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions
fi
echoline
cprpl jkblinks.zsh-theme ~/.oh-my-zsh/themes/jkblinks.zsh-theme
if [ ${SHELL} != "/usr/bin/zsh" ] ; then
  if askyn "run chsh to change to zsh shell?";
  then
    echo "running chsh..."
    chsh -s /usr/bin/zsh
  fi
fi

# for jekyll stuff
if [ ! -e ${HOME}/gems ] ; then
  mkdir ${HOME}/gems
fi

# mutt
if [ ! -e ${HOME}/mdir/tmp ] ; then
  mkdir -p ~/mdir/tmp
fi

# ssh auth keys file
if [ ! -e ${HOME}/.ssh ] ; then
  mkdir ${HOME}/.ssh
fi
echoline
cprpl authorized_keys ${HOME}/.ssh/authorized_keys

# these all have the same syntax
files=( zshrc gitconfig tmux.conf sig vimrc muttrc pythonrc bash_aliases )
for f in "${files[@]}"
do
  echo $files
  echoline
  echo "$f ---------------"
  cprpl ${f} ${HOME}/.${f}
done

# if defaults file exists, fix the default name, username, etc
echoline
if [ -e defaults ] ; then
  echo "found defaults file...fixing default stuff"
  name=`grep -w name defaults| awk -F: '{print $2}'`
  email=`grep -w email defaults| awk -F: '{print $2}'`
  emailhostname=`grep -w emailhostname defaults| awk -F: '{print $2}'`
  phone=`grep -w phone defaults| awk -F: '{print $2}'`
  title=`grep -w title defaults| awk -F: '{print $2}'`
  # fix gitconfig
  sed -i "s/NAME/$name/g" ~/.gitconfig
  sed -i "s/EMAIL/$email/g" ~/.gitconfig
  # fix sig
  sed -i "s/NAME/$name/g" ~/.sig
  sed -i "s/EMAIL/$email/g" ~/.sig
  sed -i "s/PHONE/$phone/g" ~/.sig
  sed -i "s/TITLE/$title/g" ~/.sig
  echo "----> you may want to further edit the .sig file..."
  # fix muttrc
  sed -i "s/EMAILHOSTNAME/$emailhostname/g" ~/.muttrc
fi

echo ""
echo "---- all done! ----"
echo ""
